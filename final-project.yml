AWSTemplateFormatVersion: '2010-09-09'
Resources:
  beanstalkapp:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: beanstalk-flask-app-project
      Description: "AWS Elasticbeanslk site flask app project"
  beanstalkappver:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref beanstalkapp
      SourceBundle:
        S3Bucket: beanstalk-source-bundle
        S3Key: awsmehdidockerproject.zip
  beanstalktemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !Ref beanstalkapp
      OptionSettings:
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: network
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: iam-instance-profile
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: ServiceRole
          Value: aws-elasticbeanstalk-service-role
        - Namespace: aws:elb:loadbalancer
          OptionName: CrossZone
          Value: yes
      SolutionStackName: "64bit Amazon Linux 2018.03 v2.12.5 running Docker 18.06.1-ce"
  beanstalkenv:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref beanstalkapp
      EnvironmentName: beanstalk-project-environment
      Tier:
        Name: WebServer
        Type: Standard
      TemplateName: !Ref beanstalktemplate
      VersionLabel: !Ref beanstalkappver

  beanstalkiamrole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: beanstalkiamrole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"

      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess

  beanstalkbucketmehdi:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: beanstalkbucketmehdi

  beanstalkpipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref beanstalkbucketmehdi
      Name: beanstalk-site-pipeline
      RoleArn: !GetAtt beanstalkiamrole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                RepositoryName: beanstalk-site-repo
                BranchName: master
              OutputArtifacts:
                -
                  Name: SourceOutputArtifact

        -
          Name: Build
          Actions:
            -
              Name: BuildAction
              InputArtifacts:
               -
                  Name: SourceOutputArtifact

              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: beanstalk-build
              OutputArtifacts:
                -
                  Name: BuildOutputArtifact
        -
          Name: Deploy
          Actions:
            -
              Name: DeployAction
              InputArtifacts:
                -
                  Name: BuildOutputArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ElasticBeanstalk
              Configuration:
                ApplicationName: !Ref beanstalkapp
                EnvironmentName: !Ref beanstalkenv

  origindnsrecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      RecordSets:
      - Name: origin.mehdiaws.com.
        Type: A
        AliasTarget:
          DNSName: !GetAtt beanstalkenv.EndpointURL
          HostedZoneId: "Z26RNL4JYFTOTI"
      HostedZoneName: mehdiaws.com.

  sthreedistro:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        - static.mehdiaws.com
        DefaultRootObject: index.html
        Enabled: yes
        DefaultCacheBehavior:
          TargetOriginId: s3-static
          ViewerProtocolPolicy: allow-all
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
        Origins:
        - DomainName: static.mehdiaws.com.s3-website-us-east-1.amazonaws.com
          Id: s3-static
          CustomOriginConfig:
            HTTPPort: 80
            HTTPSPort: 443
            OriginProtocolPolicy: http-only
        ViewerCertificate:
          AcmCertificateArn: "arn:aws:acm:us-east-1:313060132730:certificate/f981a44d-8ee1-4a77-aac6-f30809dc7912"
          SslSupportMethod: sni-only

  origindistro:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
        - mehdiaws.com
        Enabled: yes
        DefaultCacheBehavior:
          TargetOriginId: custom-origin
          ViewerProtocolPolicy: allow-all
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
        Origins:
        - DomainName: origin.mehdiaws.com
          Id: custom-origin
          CustomOriginConfig:
            HTTPPort: 80
            HTTPSPort: 443
            OriginProtocolPolicy: http-only
        ViewerCertificate:
          AcmCertificateArn: "arn:aws:acm:us-east-1:313060132730:certificate/f981a44d-8ee1-4a77-aac6-f30809dc7912"
          SslSupportMethod: sni-only

  s3dnsrecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      RecordSets:
      - Name: static.mehdiaws.com.
        Type: A
        AliasTarget:
          DNSName: !GetAtt sthreedistro.DomainName
          HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneName: mehdiaws.com.

  mehdiawsrecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      RecordSets:
      - Name: mehdiaws.com.
        Type: A
        AliasTarget:
          DNSName: !GetAtt origindistro.DomainName
          HostedZoneId: Z2FDTNDATAQYW2
      HostedZoneName: mehdiaws.com.
